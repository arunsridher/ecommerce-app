{"version":3,"sources":["components/Header.js","actions/index.js","components/Home.js","components/CreateProduct.js","components/ManageProducts.js","components/Cart.js","components/ProductCard.js","components/ProductEditCard.js","components/Page404.js","components/App.js","reducers/index.js","store/index.js","index.js"],"names":["Header","cartSize","this","props","Navbar","bg","variant","expand","Brand","to","style","textDecoration","color","Toggle","aria-controls","Collapse","id","Nav","className","Link","exact","activeStyle","Form","inline","Button","onClick","window","location","href","icon","faCartPlus","Component","getProducts","dispatch","fetch","then","response","json","products","console","log","type","addProducts","addProductToList","product","method","headers","body","JSON","stringify","addProductToStore","removeProductFromCart","productId","updateProduct","url","deleteProduct","Home","handleClick","e","target","innerHTML","addProductToCart","state","status","toggleSort","sortEnabled","setState","productsList","data","sort","a","b","price","sortedData","prevProps","value","Swal","fire","text","message","showConfirmButton","timer","position","toast","cart","map","index","key","label","includes","toString","connect","CreateProduct","handleInput","name","isEmpty","str","undefined","trim","showAlert","msg","addProduct","description","img","rating","resetForm","htmlFor","onChange","required","rows","cols","min","max","step","ManageProducts","Cart","length","ProductCard","src","alt","faStar","ProductEditCard","border","width","height","backgroundColor","faEdit","faTrash","Page404","App","path","component","store","initialProductState","action","productExists","some","existsInArray","updatedCart","filter","updatedList","filteredList","persistConfig","storage","whitelist","pReducer","persistReducer","rootReducer","middleware","applyMiddleware","thunk","logger","createStore","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.979d0e06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { cartSize } = this.props;\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\r\n          <Navbar.Brand><NavLink to=\"/\" style={{textDecoration: 'none', color: '#aaa'}}>eCommerce</NavLink></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link><NavLink exact to=\"/\" style={{textDecoration: 'none', color: '#aaa'}} activeStyle={{color: '#fff'}}>Home</NavLink></Nav.Link>\r\n              <Nav.Link><NavLink to=\"/add\" style={{textDecoration: 'none', color: '#aaa'}} activeStyle={{color: '#fff'}}>Add Product</NavLink></Nav.Link>\r\n              <Nav.Link><NavLink to=\"/edit\" style={{textDecoration: 'none', color: '#aaa'}} activeStyle={{color: '#fff'}}>Manage Products</NavLink></Nav.Link>\r\n            </Nav>\r\n            <Form inline>\r\n              <Button variant=\"outline-info\" onClick={() => window.location.href=\"cart\"}>\r\n              <FontAwesomeIcon icon={faCartPlus} /> <sup className=\"cart-size\">{cartSize !== 0 ? cartSize : ''}</sup>\r\n              </Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","// action types\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const ADD_PRODUCTS = \"ADD_PRODUCTS\";\r\nexport const ADD_PRODUCT_TO_LIST = \"ADD_PRODUCT_TO_LIST\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\r\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const CLEAR_MESSAGE_STATE = \"CLEAR_MESSAGE_STATE\";\r\n\r\n// action creators\r\nexport function getProducts(){\r\n  const url= \"http://localhost:3004/products\";\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(products => {\r\n        console.log(products);\r\n        dispatch(addProducts(products));\r\n      })\r\n  }\r\n}\r\n\r\nexport function addProducts(products){\r\n  return{\r\n    type: ADD_PRODUCTS,\r\n    products\r\n  }\r\n}\r\n\r\nexport function addProductToList(product){\r\n  return (dispatch) => {\r\n    const url = \"http://localhost:3004/products\";\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(product)\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      console.log(response);\r\n      dispatch(addProductToStore(response));\r\n    })\r\n  }\r\n}\r\n\r\nexport function addProductToStore(product){\r\n  return {\r\n    type: ADD_PRODUCT_TO_LIST,\r\n    product\r\n  }\r\n}\r\n\r\nexport function addProductToCart(productId){\r\n  return{\r\n    type: ADD_PRODUCT_TO_CART,\r\n    productId\r\n  }\r\n}\r\n\r\nexport function removeProductFromCart(productId){\r\n  return{\r\n    type: REMOVE_PRODUCT_FROM_CART,\r\n    productId\r\n  }\r\n}\r\n\r\nexport function updateProduct(id, product){\r\n  return (dispatch) => {\r\n    const url = `http://localhost:3004/products/${id}`;\r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(product)\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      console.log(response);\r\n      updateProductInStore(response);\r\n    })\r\n  }\r\n}\r\n\r\nexport function updateProductInStore(product){\r\n  return{\r\n    type: UPDATE_PRODUCT,\r\n    product\r\n  }\r\n}\r\n\r\nexport function deleteProduct(id){\r\n  return (dispatch) => {\r\n    const url = `http://localhost:3004/products/${id}`;\r\n    fetch(url, {\r\n      method: 'DELETE'\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      dispatch(deleteProductFromStore(id));\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteProductFromStore(productId){\r\n  return{\r\n    type: DELETE_PRODUCT,\r\n    productId\r\n  }\r\n}\r\nexport function clearMessageState(){\r\n  return{\r\n    type: CLEAR_MESSAGE_STATE,\r\n    status: '',\r\n    message: ''\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProductCard } from './index';\r\nimport { addProductToCart, removeProductFromCart, clearMessageState } from '../actions';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Home extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      sortEnabled: false,\r\n      sortedData: []\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(prevProps.value !== this.props && this.props.state.status !== ''){ \r\n      Swal.fire({\r\n        text: this.props.state.message,\r\n        icon: this.props.state.status,\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n        position: 'top',\r\n        toast: true\r\n      })\r\n      .then(() => {\r\n        this.props.dispatch(clearMessageState());\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const productId = e.target.id;\r\n    if(e.target.innerHTML === \"Add to Cart\"){\r\n      this.props.dispatch(addProductToCart(productId));\r\n      if(this.props.state.status === 'success'){\r\n        e.target.innerHTML = \"Remove from Cart\";\r\n        e.target.className = \"btn-danger\";\r\n      }\r\n    }\r\n    else{\r\n      this.props.dispatch(removeProductFromCart(productId));\r\n      if(this.props.state.status === 'success'){\r\n        e.target.innerHTML = \"Add to Cart\";\r\n        e.target.className = \"btn-success\";\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleSort = (e) => {\r\n    if(this.state.sortEnabled){\r\n      e.target.className=\"btn-success\";\r\n      e.target.innerHTML=\"Sort By Price\";\r\n      this.setState({\r\n        sortEnabled: false\r\n      })\r\n    }\r\n    else{\r\n      const { productsList } = this.props.state; \r\n      let data = [...productsList];\r\n      data.sort((a, b) => a.price - b.price);\r\n      e.target.className=\"btn-danger\";\r\n      e.target.innerHTML=\"Reset\";\r\n      this.setState({\r\n        sortEnabled: true,\r\n        sortedData: data\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('State ', this.props.state);\r\n    const productsList = this.state.sortEnabled ? this.state.sortedData : this.props.state.productsList;\r\n    const cart = this.props.state.cart;\r\n    // const { productsList } = this.props.state;\r\n    return (\r\n      <div className=\"products-container\">\r\n        <div className=\"products-list\">\r\n          {\r\n            productsList.map((product, index) => (\r\n              <ProductCard\r\n                product={product} \r\n                key={`product-${index}`}\r\n                dispatch={this.props.dispatch}\r\n                handleClick = {this.handleClick}\r\n                label = {cart.includes(product.id.toString()) ? \"Remove from Cart\" : \"Add to Cart\"} \r\n                className={cart.includes(product.id.toString()) ? \"btn-danger\" : \"btn-success\"}\r\n              /> \r\n            ))\r\n          }\r\n        </div>\r\n        <div className=\"products-sort\">\r\n          <button type=\"button\" className=\"btn-success\" onClick={this.toggleSort}>Sort By Price</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return{\r\n    state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addProductToList, clearMessageState } from '../actions';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass CreateProduct extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      name: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      rating: 0,\r\n      img: \"\"\r\n    }\r\n  }\r\n  \r\n  handleInput = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  isEmpty = (str) => {\r\n    return str === undefined || str.trim() === '';\r\n  }\r\n\r\n  showAlert = (msg) => {\r\n    Swal.fire({\r\n      text: msg,\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'center',\r\n    });\r\n  }\r\n\r\n  addProduct = () => {\r\n    if(this.isEmpty(this.state.name)){\r\n      this.showAlert(\"Please provide the name of the product\");\r\n      return;\r\n    }\r\n    if(this.isEmpty(this.state.description)){\r\n      this.showAlert(\"Please provide the description of the product\");\r\n      return;\r\n    }\r\n    if(this.isEmpty(this.state.price) || this.state.price === \"0\"){\r\n      this.showAlert(\"Please provide the price of the product\");\r\n      return;\r\n    }\r\n    if(this.isEmpty(this.state.img)){\r\n      this.showAlert(\"Please provide the image URL of the product\");\r\n      return;\r\n    }\r\n    let product = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      price: this.state.price,\r\n      rating: this.state.rating,\r\n      img: this.state.img\r\n    }\r\n    this.props.dispatch(addProductToList(product));\r\n    if(this.props.state.status === \"success\"){\r\n      this.resetForm();\r\n    }\r\n    Swal.fire({\r\n      text: \"Product added successfully\",\r\n      icon: 'success',\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'top',\r\n      toast: true\r\n    });\r\n  }\r\n\r\n  resetForm = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      rating: 0,\r\n      img: \"\"\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"page-heading\">ADD PRODUCT</h1>\r\n        <form id=\"add-product-form\">\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"name\">Name *</label>\r\n            <input type=\"text\" id=\"name\" className=\"custom-input\" name=\"name\" onChange={this.handleInput} value={this.state.name} required/>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"description\">Description *</label>\r\n            <textarea id=\"description\" className=\"custom-input\" name=\"description\" onChange={this.handleInput} value={this.state.description} rows=\"3\" cols=\"30\" required></textarea>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"price\">Price *</label>\r\n            <input type=\"number\" id=\"price\" className=\"custom-input\" name=\"price\" onChange={this.handleInput} value={this.state.price}  required/>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"rating\">Rating *</label>\r\n            <input type=\"range\" min=\"0\" max=\"5\" step=\"0.1\" id=\"rating\" className=\"custom-input\" name=\"rating\" onChange={this.handleInput} value={this.state.rating}  required/>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"img\">URL *</label>\r\n            <input type=\"url\" id=\"img\" className=\"custom-input\" name=\"img\" onChange={this.handleInput} value={this.state.img}  required/>\r\n          </div>\r\n          <div className=\"input-button-group\">\r\n            <button type=\"button\" className=\"btn-success\" onClick={this.addProduct}>Add Product</button>\r\n            <button type=\"button\" className=\"btn-danger\">Reset</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return{\r\n    state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(CreateProduct);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProductEditCard } from './';\r\n\r\nclass ManageProducts extends Component {\r\n  render() {\r\n    const productsList = this.props.state.productsList;\r\n    return (\r\n      <div>\r\n        {\r\n          productsList.map((product, index) => (\r\n            <ProductEditCard\r\n              product={product} \r\n              key={`product-${product.id}-${index}-${product.name}`}\r\n              dispatch={this.props.dispatch}\r\n            /> \r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return{\r\n    state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(ManageProducts);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ProductCard } from './index';\r\nimport { removeProductFromCart } from '../actions';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Cart extends Component {\r\n  \r\n  handleClick = (e) => {\r\n    const productId = e.target.id;\r\n    console.log(e.target);\r\n    this.props.dispatch(removeProductFromCart(productId));\r\n    Swal.fire({\r\n      text: 'Product removed from cart',\r\n      icon: 'success',\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'top',\r\n      toast: true\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { productsList, cart } = this.props.state;\r\n    return (\r\n      <div>\r\n        {\r\n          productsList.map((product, index) => (\r\n            cart.includes(product.id.toString()) ?\r\n              <ProductCard\r\n                product={product} \r\n                key={`product-${index}`}\r\n                dispatch={this.props.dispatch}\r\n                handleClick = {this.handleClick}\r\n                label=\"Remove from Cart\"\r\n                className=\"btn-danger\"\r\n              /> : null\r\n          ))\r\n        }\r\n      {cart.length === 0 ? <div className=\"cart-empty\">Cart is Empty!</div> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return{\r\n    state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Cart);","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { addProductToCart } from '../actions';\r\n\r\nclass ProductCard extends Component {\r\n  render() {\r\n    const { product, handleClick, label, className } = this.props;\r\n    return (\r\n      <div className=\"product-card\">\r\n        <div className=\"product-image\">\r\n          <img src={product.img} alt={product.name} />\r\n        </div>\r\n        <div className=\"product-description\">\r\n          <h3>{product.name}</h3>\r\n          <p className=\"rating-container\"><span className=\"rating\">{product.rating}</span><FontAwesomeIcon className=\"star-icon\" icon={faStar} /></p>\r\n          <p>{product.description}</p>\r\n        </div>\r\n        <div className=\"product-options\">\r\n          <div className=\"price\">&#8377; {product.price}</div>\r\n            <button type=\"button\" id={product.id} onClick={handleClick} className={\"add-to-cart \" + className}>{label}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductCard;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateProduct, deleteProduct } from '../actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass ProductEditCard extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.product.name,\r\n      description: this.props.product.description,\r\n      rating: this.props.product.rating,\r\n      price: this.props.product.price\r\n    }\r\n  }\r\n\r\n  isEmpty = (str) => {\r\n    return str === undefined || str.trim() === '';\r\n  }\r\n\r\n  showAlert = (msg) => {\r\n    Swal.fire({\r\n      text: msg,\r\n      icon: 'error',\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'center',\r\n    });\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    if(e.target.name === \"rating\" && (e.target.value < 0 || e.target.value > 5)){\r\n      this.showAlert(\"Rating cannot be greater than 5\");\r\n      e.target.value = this.state.rating;\r\n      return;\r\n    }\r\n    if(e.target.name === \"price\" && (e.target.value <= 0)){\r\n      this.showAlert(\"Price cannot be less than 0 or empty\");\r\n      e.target.value = this.state.rating;\r\n      return;\r\n    }\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n\r\n  updateProduct = () => {\r\n    if(this.isEmpty(this.state.name)){\r\n      this.showAlert(\"Please provide the name of the product\");\r\n      return;\r\n    }\r\n    if(this.isEmpty(this.state.description)){\r\n      this.showAlert(\"Please provide the description of the product\");\r\n      return;\r\n    }\r\n    if(this.state.price == \"\" || this.state.price === \"0\"){\r\n      this.showAlert(\"Please provide the price of the product\");\r\n      return;\r\n    }\r\n    const id = this.props.product.id;\r\n    const img = this.props.product.img;\r\n    let product = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      rating: this.state.rating,\r\n      price: this.state.price,\r\n      img\r\n    }\r\n    this.props.dispatch(updateProduct(id, product));\r\n    Swal.fire({\r\n      text: \"Product updated successfully\",\r\n      icon: this.props.state.status,\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'top',\r\n      toast: true\r\n    });\r\n  }\r\n\r\n\r\n  deleteProduct = () => {\r\n    const id = this.props.product.id;\r\n    console.log(\"id\", id);\r\n    this.props.dispatch(deleteProduct(id));\r\n    Swal.fire({\r\n      text: \"Product deleted from cart\",\r\n      icon: this.props.state.status,\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      position: 'top',\r\n      toast: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { product } = this.props;\r\n    return (\r\n      <div className=\"product-card\">\r\n        <div className=\"product-image\">\r\n          <img src={product.img} alt={product.name} />\r\n        </div>\r\n        <div className=\"product-description\">\r\n          <h3>\r\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInput} style={{border: 0}} required />\r\n          </h3>\r\n          <p className=\"rating-container\" style={{width: '50px', height: '25px'}}>\r\n            <span className=\"rating\">\r\n              <input type=\"number\" name=\"rating\" value={this.state.rating} onChange={this.handleInput} min=\"0\" max=\"5\" style={{width: '25px', border: 0, backgroundColor: '#388E3C'}} required/>\r\n            </span>\r\n            <FontAwesomeIcon className=\"star-icon\" icon={faStar} />\r\n          </p>\r\n          <p>\r\n            <textarea className=\"description\" name=\"description\" value={this.state.description} onChange={this.handleInput} rows=\"3\" cols=\"54\" style={{border: 0}} required></textarea>\r\n          </p>\r\n        </div>\r\n        <div className=\"product-options\">\r\n          <div className=\"price\">\r\n            &#8377; <input type=\"number\" name=\"price\" value={this.state.price} onChange={this.handleInput} style={{width: '80px', border: 0}} required/>\r\n          </div>\r\n          <div className=\"options\">\r\n            <div onClick={this.updateProduct} className=\"options-button\"><FontAwesomeIcon className=\"edit-icon\" icon={faEdit} /> Update</div>\r\n            <div onClick={this.deleteProduct} className=\"options-button\"><FontAwesomeIcon className=\"delete-icon\" icon={faTrash} /> Delete</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state){\r\n  return{\r\n    state\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(ProductEditCard);","import React from 'react';\r\n\r\nfunction Page404(props) {\r\n  return (\r\n    <div>\r\n      <h1>404: Nothing found here!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import React, { Component } from 'react';\nimport { Header, Home, CreateProduct, ManageProducts, Cart, Page404 } from './index';\nimport { getProducts, clearMessageState } from '../actions';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  \n  componentDidMount(){\n    this.props.dispatch(getProducts());\n  }\n  \n  render(){\n    const cartSize = this.props.cart.length;\n    return (\n      <Router>\n        <div>\n          <Header cartSize={cartSize} />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/add\" component={CreateProduct} />\n              <Route path=\"/edit\" component={ManageProducts} />\n              <Route path=\"/cart\" component={Cart} />\n              <Route component={Page404} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(store){\n  return store;\n}\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { ADD_PRODUCTS, ADD_PRODUCT_TO_CART, REMOVE_PRODUCT_FROM_CART, ADD_PRODUCT_TO_LIST, UPDATE_PRODUCT, CLEAR_MESSAGE_STATE, DELETE_PRODUCT } from '../actions';\r\n\r\nconst initialProductState = {\r\n  productsList: [],\r\n  cart: [],\r\n  status: '',\r\n  message: ''\r\n}\r\n\r\nexport function products(state = initialProductState, action){\r\n  switch(action.type){\r\n    case ADD_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        productsList: action.products,\r\n        status: 'success',\r\n        message: 'Products fetched successfully'\r\n      };\r\n    case ADD_PRODUCT_TO_LIST:\r\n      const productExists = state.cart.some(product => product.id === action.product.id);\r\n      if(productExists){\r\n        return {\r\n          ...state,\r\n          status: 'failure',\r\n          message: 'Product already exists'\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        productsList: [action.product, ...state.productsList],\r\n        status: 'success',\r\n        message: 'Product added successfully'\r\n      }\r\n    case ADD_PRODUCT_TO_CART:\r\n      const existsInArray = state.cart.some(productId => productId === action.productId);\r\n      if(existsInArray)\r\n        return {\r\n          ...state,\r\n          status: 'failure',\r\n          message: 'Product already added to cart'\r\n        };\r\n      return {\r\n        ...state,\r\n        cart: [action.productId, ...state.cart],\r\n        status: 'success',\r\n        message: 'Product added to cart'\r\n      };\r\n    case REMOVE_PRODUCT_FROM_CART:\r\n      const updatedCart = state.cart.filter(productId => productId !== action.productId);\r\n      if(updatedCart.length === state.cart){\r\n        return{\r\n          ...state,\r\n          status: 'failure',\r\n          message: 'Product doesnt exist in the cart'\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: updatedCart,\r\n        status: 'success',\r\n        message: 'Product removed from cart'\r\n      };\r\n    case UPDATE_PRODUCT:\r\n      const updatedList = state.productsList.map(product => product.id === action.product.id ? action.product : product);\r\n      return {\r\n        ...state,\r\n        productsList: updatedList,\r\n        status: 'success',\r\n        message: 'Product updated successfully'\r\n      }\r\n    case CLEAR_MESSAGE_STATE:\r\n      return{\r\n        ...state,\r\n        status: action.status,\r\n        message: action.message\r\n      };\r\n    case DELETE_PRODUCT:\r\n      const filteredList = state.productsList.filter(product => product.id !== action.productId);\r\n      return{\r\n        ...state,\r\n        productsList: filteredList,\r\n        status: 'success',\r\n        message: 'Product deleted from cart'\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default products;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'cart',\r\n  storage: storage,\r\n  whitelist: ['cart'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(pReducer, middleware);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}